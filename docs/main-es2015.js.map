{"version":3,"sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts","./src/services/route-reuse-strategy.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [{\n  path: 'child1',\n  children: [{\n    path: '**',\n    loadChildren: () => import('./spa-host/spa-host.module').then(m => m.SpaHostModule),\n    data: { app: 'child1' }\n  }]\n}, {\n  path: 'child2',\n  children: [{\n    path: '**',\n    loadChildren: () => import('./spa-host/spa-host.module').then(m => m.SpaHostModule),\n    data: { app: 'child2' }\n  }]\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'container';\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n    Welcome to {{ title }}!\n  </h1>\n</div>\n\n<main>\n    <ul>\n      <li><h2><a routerLink=\"/child1\">Child 1</a></h2></li>\n      <li><h2><a routerLink=\"/child2\">Child 2</a></h2></li>\n    </ul>\n    <section class=\"child-app\">\n        <router-outlet></router-outlet>\n    </section>\n</main>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SpaHostComponent } from './spa-host/spa-host.component';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { MicroFrontendRouteReuseStrategy } from 'src/services/route-reuse-strategy';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [{\n    provide: RouteReuseStrategy,\n    useClass: MicroFrontendRouteReuseStrategy\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode, NgZone } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { start as singleSpaStart } from 'single-spa';\nimport { getSingleSpaExtraProviders } from 'single-spa-angular';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { PlatformLocation } from '@angular/common';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nsingleSpaStart();\n\nconst appId = 'container-app';\n\n\nplatformBrowserDynamic(getSingleSpaExtraProviders()).bootstrapModule(AppModule)\n  .then(module => {\n    NgZone.isInAngularZone = () => {\n      // @ts-ignore\n      return window.Zone.current._properties[appId] === true;\n    };\n\n    const rootPlatformLocation = module.injector.get(PlatformLocation) as any;\n    const rootZone = module.injector.get(NgZone);\n\n    // tslint:disable-next-line:no-string-literal\n    rootZone['_inner']._properties[appId] = true;\n    rootPlatformLocation.setNgZone(rootZone);\n  })\n  .catch(err => console.error(err));\n","import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MicroFrontendRouteReuseStrategy extends RouteReuseStrategy {\n  shouldDetach(): boolean {\n    return false;\n  }\n\n  store(): void { }\n\n  shouldAttach(): boolean {\n    return false;\n  }\n\n  retrieve(): DetachedRouteHandle {\n    return null;\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    /// If a child app routes inside of itself, this app will interpret that as a route change.\n    ///\n    /// By default, this will result in the current component being destroyed and replaced with a new instance\n    /// of the same spa-host component.\n    ///\n    /// This route reuse strategy looks at the routeData.app to determine if the new route should be\n    /// treated as the exact same route as the previous, ensuring we don't remount a child app when said child app\n    /// routes inside of itself.\n\n    return future.routeConfig === curr.routeConfig || (future.data.app && (future.data.app === curr.data.app));\n  }\n}\n"],"sourceRoot":"webpack:///"}